/*! tailwindcss v4.1.13 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-red-100: oklch(93.6% 0.032 17.717);
    --color-red-400: oklch(70.4% 0.191 22.216);
    --color-red-500: oklch(63.7% 0.237 25.331);
    --color-red-600: oklch(57.7% 0.245 27.325);
    --color-red-700: oklch(50.5% 0.213 27.518);
    --color-red-800: oklch(44.4% 0.177 26.899);
    --color-red-900: oklch(39.6% 0.141 25.723);
    --color-blue-600: oklch(54.6% 0.245 262.881);
    --color-blue-800: oklch(42.4% 0.199 265.638);
    --color-blue-900: oklch(37.9% 0.146 265.522);
    --color-fuchsia-950: oklch(29.3% 0.136 325.661);
    --color-pink-100: oklch(94.8% 0.028 342.258);
    --color-gray-50: oklch(98.5% 0.002 247.839);
    --color-gray-500: oklch(55.1% 0.027 264.364);
    --color-gray-600: oklch(44.6% 0.03 256.802);
    --color-gray-700: oklch(37.3% 0.034 259.733);
    --color-gray-800: oklch(27.8% 0.033 256.848);
    --color-gray-900: oklch(21% 0.034 264.665);
    --color-gray-950: oklch(13% 0.028 261.692);
    --color-white: #fff;
    --spacing: 0.25rem;
    --container-2xs: 18rem;
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --radius-xs: 0.125rem;
    --radius-sm: 0.25rem;
    --radius-md: 0.375rem;
    --radius-lg: 0.5rem;
    --radius-xl: 0.75rem;
    --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
    --blur-sm: 8px;
    --blur-2xl: 40px;
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  ::-webkit-calendar-picker-indicator {
    line-height: 1;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .relative {
    position: relative;
  }
  .static {
    position: static;
  }
  .top-4 {
    top: calc(var(--spacing) * 4);
  }
  .right-4 {
    right: calc(var(--spacing) * 4);
  }
  .bottom-4 {
    bottom: calc(var(--spacing) * 4);
  }
  .z-10 {
    z-index: 10;
  }
  .container {
    width: 100%;
    @media (width >= 40rem) {
      max-width: 40rem;
    }
    @media (width >= 48rem) {
      max-width: 48rem;
    }
    @media (width >= 64rem) {
      max-width: 64rem;
    }
    @media (width >= 80rem) {
      max-width: 80rem;
    }
    @media (width >= 96rem) {
      max-width: 96rem;
    }
  }
  .my-3 {
    margin-block: calc(var(--spacing) * 3);
  }
  .mb-5 {
    margin-bottom: calc(var(--spacing) * 5);
  }
  .mb-9 {
    margin-bottom: calc(var(--spacing) * 9);
  }
  .contents {
    display: contents;
  }
  .flex {
    display: flex;
  }
  .table {
    display: table;
  }
  .h-screen {
    height: 100vh;
  }
  .min-w-\[400px\] {
    min-width: 400px;
  }
  .flex-grow {
    flex-grow: 1;
  }
  .flex-grow-1 {
    flex-grow: 1;
  }
  .grow {
    flex-grow: 1;
  }
  .border-collapse {
    border-collapse: collapse;
  }
  .resize {
    resize: both;
  }
  .items-center {
    align-items: center;
  }
  .justify-center {
    justify-content: center;
  }
  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }
  .rounded {
    border-radius: 0.25rem;
  }
  .rounded-md {
    border-radius: var(--radius-md);
  }
  .rounded-sm {
    border-radius: var(--radius-sm);
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-1 {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-2 {
    border-style: var(--tw-border-style);
    border-width: 2px;
  }
  .border-gray-700 {
    border-color: var(--color-gray-700);
  }
  .bg-blue-800 {
    background-color: var(--color-blue-800);
  }
  .bg-gray-950 {
    background-color: var(--color-gray-950);
  }
  .bg-red-800 {
    background-color: var(--color-red-800);
  }
  .p-2 {
    padding: calc(var(--spacing) * 2);
  }
  .p-3 {
    padding: calc(var(--spacing) * 3);
  }
  .p-7 {
    padding: calc(var(--spacing) * 7);
  }
  .px-2 {
    padding-inline: calc(var(--spacing) * 2);
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .py-1 {
    padding-block: calc(var(--spacing) * 1);
  }
  .text-center {
    text-align: center;
  }
  .text-\[32px\] {
    font-size: 32px;
  }
  .text-white {
    color: var(--color-white);
  }
  .line-through {
    text-decoration-line: line-through;
  }
  .overline {
    text-decoration-line: overline;
  }
  .underline {
    text-decoration-line: underline;
  }
  .shadow {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-\[0_35px_35px_rgba\(255\,255\,255\,0\.25\)\] {
    --tw-shadow: 0 35px 35px var(--tw-shadow-color, rgba(255,255,255,0.25));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .blur {
    --tw-blur: blur(8px);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .blur-2xl {
    --tw-blur: blur(var(--blur-2xl));
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .filter {
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .backdrop-blur-2xl {
    --tw-backdrop-blur: blur(var(--blur-2xl));
    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  }
  .backdrop-filter {
    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  }
  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, content-visibility, overlay, pointer-events;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .duration-300 {
    --tw-duration: 300ms;
    transition-duration: 300ms;
  }
  .duration-500 {
    --tw-duration: 500ms;
    transition-duration: 500ms;
  }
  .duration-1000 {
    --tw-duration: 1000ms;
    transition-duration: 1000ms;
  }
  .ease-in-out {
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
  }
  .\*\:my-2 {
    :is(& > *) {
      margin-block: calc(var(--spacing) * 2);
    }
  }
  .\*\:rounded {
    :is(& > *) {
      border-radius: 0.25rem;
    }
  }
  .\*\:p-3 {
    :is(& > *) {
      padding: calc(var(--spacing) * 3);
    }
  }
  .\*\:duration-100 {
    :is(& > *) {
      --tw-duration: 100ms;
      transition-duration: 100ms;
    }
  }
  .\*\:duration-200 {
    :is(& > *) {
      --tw-duration: 200ms;
      transition-duration: 200ms;
    }
  }
  .group-focus-within\:blur-sm {
    &:is(:where(.group):focus-within *) {
      --tw-blur: blur(var(--blur-sm));
      filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
    }
  }
  .peer-focus\:relative {
    &:is(:where(.peer):focus ~ *) {
      position: relative;
    }
  }
  .peer-focus\:top-2 {
    &:is(:where(.peer):focus ~ *) {
      top: calc(var(--spacing) * 2);
    }
  }
  .peer-focus\:top-4 {
    &:is(:where(.peer):focus ~ *) {
      top: calc(var(--spacing) * 4);
    }
  }
  .peer-focus\:top-50 {
    &:is(:where(.peer):focus ~ *) {
      top: calc(var(--spacing) * 50);
    }
  }
  .peer-focus\:top-\[400px\] {
    &:is(:where(.peer):focus ~ *) {
      top: 400px;
    }
  }
  .peer-focus\:left-5 {
    &:is(:where(.peer):focus ~ *) {
      left: calc(var(--spacing) * 5);
    }
  }
  .peer-focus\:left-6 {
    &:is(:where(.peer):focus ~ *) {
      left: calc(var(--spacing) * 6);
    }
  }
  .peer-focus\:translate-3\.5 {
    &:is(:where(.peer):focus ~ *) {
      --tw-translate-x: calc(var(--spacing) * 3.5);
      --tw-translate-y: calc(var(--spacing) * 3.5);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .peer-focus\:translate-5 {
    &:is(:where(.peer):focus ~ *) {
      --tw-translate-x: calc(var(--spacing) * 5);
      --tw-translate-y: calc(var(--spacing) * 5);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .peer-focus\:translate-x-1 {
    &:is(:where(.peer):focus ~ *) {
      --tw-translate-x: calc(var(--spacing) * 1);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .peer-focus\:translate-x-2 {
    &:is(:where(.peer):focus ~ *) {
      --tw-translate-x: calc(var(--spacing) * 2);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .peer-focus\:translate-x-\[-0px\] {
    &:is(:where(.peer):focus ~ *) {
      --tw-translate-x: -0px;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .peer-focus\:translate-x-\[-1px\] {
    &:is(:where(.peer):focus ~ *) {
      --tw-translate-x: -1px;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .peer-focus\:translate-x-\[-5px\] {
    &:is(:where(.peer):focus ~ *) {
      --tw-translate-x: -5px;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .peer-focus\:translate-x-\[-20px\] {
    &:is(:where(.peer):focus ~ *) {
      --tw-translate-x: -20px;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .peer-focus\:translate-x-\[-25px\] {
    &:is(:where(.peer):focus ~ *) {
      --tw-translate-x: -25px;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .peer-focus\:translate-x-\[-40px\] {
    &:is(:where(.peer):focus ~ *) {
      --tw-translate-x: -40px;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .peer-focus\:translate-x-\[-50px\] {
    &:is(:where(.peer):focus ~ *) {
      --tw-translate-x: -50px;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .peer-focus\:translate-x-\[-60px\] {
    &:is(:where(.peer):focus ~ *) {
      --tw-translate-x: -60px;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .peer-focus\:translate-x-\[-80px\] {
    &:is(:where(.peer):focus ~ *) {
      --tw-translate-x: -80px;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .peer-focus\:translate-x-\[-90px\] {
    &:is(:where(.peer):focus ~ *) {
      --tw-translate-x: -90px;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .peer-focus\:translate-x-\[-106px\] {
    &:is(:where(.peer):focus ~ *) {
      --tw-translate-x: -106px;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .peer-focus\:translate-x-\[-107px\] {
    &:is(:where(.peer):focus ~ *) {
      --tw-translate-x: -107px;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .peer-focus\:translate-x-\[-110px\] {
    &:is(:where(.peer):focus ~ *) {
      --tw-translate-x: -110px;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .peer-focus\:translate-x-\[-px\] {
    &:is(:where(.peer):focus ~ *) {
      --tw-translate-x: -px;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .peer-focus\:translate-x-\[12px\] {
    &:is(:where(.peer):focus ~ *) {
      --tw-translate-x: 12px;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .peer-focus\:translate-x-\[20px\] {
    &:is(:where(.peer):focus ~ *) {
      --tw-translate-x: 20px;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .peer-focus\:translate-x-\[25px\] {
    &:is(:where(.peer):focus ~ *) {
      --tw-translate-x: 25px;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .peer-focus\:translate-x-\[30px\] {
    &:is(:where(.peer):focus ~ *) {
      --tw-translate-x: 30px;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .peer-focus\:translate-x-\[40px\] {
    &:is(:where(.peer):focus ~ *) {
      --tw-translate-x: 40px;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .peer-focus\:translate-x-\[50px\] {
    &:is(:where(.peer):focus ~ *) {
      --tw-translate-x: 50px;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .peer-focus\:translate-x-\[56px\] {
    &:is(:where(.peer):focus ~ *) {
      --tw-translate-x: 56px;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .peer-focus\:translate-x-\[60px\] {
    &:is(:where(.peer):focus ~ *) {
      --tw-translate-x: 60px;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .peer-focus\:translate-x-\[70px\] {
    &:is(:where(.peer):focus ~ *) {
      --tw-translate-x: 70px;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .peer-focus\:translate-x-\[80px\] {
    &:is(:where(.peer):focus ~ *) {
      --tw-translate-x: 80px;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .peer-focus\:translate-x-\[90px\] {
    &:is(:where(.peer):focus ~ *) {
      --tw-translate-x: 90px;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .peer-focus\:translate-x-\[100px\] {
    &:is(:where(.peer):focus ~ *) {
      --tw-translate-x: 100px;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .peer-focus\:translate-x-\[px\] {
    &:is(:where(.peer):focus ~ *) {
      --tw-translate-x: px;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .peer-focus\:translate-y-7 {
    &:is(:where(.peer):focus ~ *) {
      --tw-translate-y: calc(var(--spacing) * 7);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .peer-focus\:translate-y-\[-30px\] {
    &:is(:where(.peer):focus ~ *) {
      --tw-translate-y: -30px;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .peer-focus\:translate-y-\[-\] {
    &:is(:where(.peer):focus ~ *) {
      --tw-translate-y: -;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .peer-focus\:translate-y-\[00px\] {
    &:is(:where(.peer):focus ~ *) {
      --tw-translate-y: 00px;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .peer-focus\:translate-y-\[30px\] {
    &:is(:where(.peer):focus ~ *) {
      --tw-translate-y: 30px;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .peer-focus\:translate-y-\[40px\] {
    &:is(:where(.peer):focus ~ *) {
      --tw-translate-y: 40px;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .peer-focus\:translate-y-\[60px\] {
    &:is(:where(.peer):focus ~ *) {
      --tw-translate-y: 60px;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .peer-focus\:translate-y-\[80px\] {
    &:is(:where(.peer):focus ~ *) {
      --tw-translate-y: 80px;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .peer-focus\:translate-y-\[100px\] {
    &:is(:where(.peer):focus ~ *) {
      --tw-translate-y: 100px;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .peer-focus\:translate-y-\[130px\] {
    &:is(:where(.peer):focus ~ *) {
      --tw-translate-y: 130px;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .peer-focus\:translate-y-\[140px\] {
    &:is(:where(.peer):focus ~ *) {
      --tw-translate-y: 140px;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .peer-focus\:translate-y-\[150px\] {
    &:is(:where(.peer):focus ~ *) {
      --tw-translate-y: 150px;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .peer-focus\:translate-y-\[1500px\] {
    &:is(:where(.peer):focus ~ *) {
      --tw-translate-y: 1500px;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .peer-focus\:scale-75 {
    &:is(:where(.peer):focus ~ *) {
      --tw-scale-x: 75%;
      --tw-scale-y: 75%;
      --tw-scale-z: 75%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }
  .peer-focus\:scale-\[1\.2\] {
    &:is(:where(.peer):focus ~ *) {
      scale: 1.2;
    }
  }
  .peer-focus\:scale-\[1\.3\] {
    &:is(:where(.peer):focus ~ *) {
      scale: 1.3;
    }
  }
  .peer-focus\:scale-\[1\.22\] {
    &:is(:where(.peer):focus ~ *) {
      scale: 1.22;
    }
  }
  .peer-focus\:scale-\[2\.4\] {
    &:is(:where(.peer):focus ~ *) {
      scale: 2.4;
    }
  }
  .peer-focus\:scale-\[2\] {
    &:is(:where(.peer):focus ~ *) {
      scale: 2;
    }
  }
  .peer-focus\:scale-\[3\.\] {
    &:is(:where(.peer):focus ~ *) {
      scale: 3.;
    }
  }
  .peer-focus\:scale-\[3\] {
    &:is(:where(.peer):focus ~ *) {
      scale: 3;
    }
  }
  .odd\:bg-gray-800 {
    &:nth-child(odd) {
      background-color: var(--color-gray-800);
    }
  }
  .\*\:odd\:bg-gray-800 {
    :is(& > *) {
      &:nth-child(odd) {
        background-color: var(--color-gray-800);
      }
    }
  }
  .even\:bg-gray-700 {
    &:nth-child(even) {
      background-color: var(--color-gray-700);
    }
  }
  .\*\:even\:bg-gray-700 {
    :is(& > *) {
      &:nth-child(even) {
        background-color: var(--color-gray-700);
      }
    }
  }
  .focus-within\:scale-300 {
    &:focus-within {
      --tw-scale-x: 300%;
      --tw-scale-y: 300%;
      --tw-scale-z: 300%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }
  .hover\:scale-300 {
    &:hover {
      @media (hover: hover) {
        --tw-scale-x: 300%;
        --tw-scale-y: 300%;
        --tw-scale-z: 300%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .hover\:scale-\[1\.2\] {
    &:hover {
      @media (hover: hover) {
        scale: 1.2;
      }
    }
  }
  .hover\:bg-blue-600 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-blue-600);
      }
    }
  }
  .hover\:bg-red-700 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-red-700);
      }
    }
  }
  .\*\:hover\:scale-1 {
    :is(& > *) {
      &:hover {
        @media (hover: hover) {
          --tw-scale-x: 1%;
          --tw-scale-y: 1%;
          --tw-scale-z: 1%;
          scale: var(--tw-scale-x) var(--tw-scale-y);
        }
      }
    }
  }
  .\*\:hover\:scale-2 {
    :is(& > *) {
      &:hover {
        @media (hover: hover) {
          --tw-scale-x: 2%;
          --tw-scale-y: 2%;
          --tw-scale-z: 2%;
          scale: var(--tw-scale-x) var(--tw-scale-y);
        }
      }
    }
  }
  .\*\:hover\:scale-10 {
    :is(& > *) {
      &:hover {
        @media (hover: hover) {
          --tw-scale-x: 10%;
          --tw-scale-y: 10%;
          --tw-scale-z: 10%;
          scale: var(--tw-scale-x) var(--tw-scale-y);
        }
      }
    }
  }
  .\*\:hover\:scale-11 {
    :is(& > *) {
      &:hover {
        @media (hover: hover) {
          --tw-scale-x: 11%;
          --tw-scale-y: 11%;
          --tw-scale-z: 11%;
          scale: var(--tw-scale-x) var(--tw-scale-y);
        }
      }
    }
  }
  .\*\:hover\:scale-105 {
    :is(& > *) {
      &:hover {
        @media (hover: hover) {
          --tw-scale-x: 105%;
          --tw-scale-y: 105%;
          --tw-scale-z: 105%;
          scale: var(--tw-scale-x) var(--tw-scale-y);
        }
      }
    }
  }
  .\*\:hover\:scale-110 {
    :is(& > *) {
      &:hover {
        @media (hover: hover) {
          --tw-scale-x: 110%;
          --tw-scale-y: 110%;
          --tw-scale-z: 110%;
          scale: var(--tw-scale-x) var(--tw-scale-y);
        }
      }
    }
  }
  .\*\:hover\:scale-111 {
    :is(& > *) {
      &:hover {
        @media (hover: hover) {
          --tw-scale-x: 111%;
          --tw-scale-y: 111%;
          --tw-scale-z: 111%;
          scale: var(--tw-scale-x) var(--tw-scale-y);
        }
      }
    }
  }
  .\*\:hover\:scale-120 {
    :is(& > *) {
      &:hover {
        @media (hover: hover) {
          --tw-scale-x: 120%;
          --tw-scale-y: 120%;
          --tw-scale-z: 120%;
          scale: var(--tw-scale-x) var(--tw-scale-y);
        }
      }
    }
  }
  .\*\:hover\:scale-150 {
    :is(& > *) {
      &:hover {
        @media (hover: hover) {
          --tw-scale-x: 150%;
          --tw-scale-y: 150%;
          --tw-scale-z: 150%;
          scale: var(--tw-scale-x) var(--tw-scale-y);
        }
      }
    }
  }
  .focus\:translate-x-3 {
    &:focus {
      --tw-translate-x: calc(var(--spacing) * 3);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .focus\:translate-x-\[-18px\] {
    &:focus {
      --tw-translate-x: -18px;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .focus\:translate-x-\[-20px\] {
    &:focus {
      --tw-translate-x: -20px;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .focus\:translate-x-\[-23px\] {
    &:focus {
      --tw-translate-x: -23px;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .focus\:translate-x-\[4px\] {
    &:focus {
      --tw-translate-x: 4px;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .focus\:translate-x-\[18px\] {
    &:focus {
      --tw-translate-x: 18px;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .focus\:translate-x-\[20px\] {
    &:focus {
      --tw-translate-x: 20px;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .focus\:translate-x-\[25px\] {
    &:focus {
      --tw-translate-x: 25px;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .focus\:translate-x-\[30px\] {
    &:focus {
      --tw-translate-x: 30px;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .focus\:translate-x-\[35px\] {
    &:focus {
      --tw-translate-x: 35px;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .focus\:translate-x-\[40px\] {
    &:focus {
      --tw-translate-x: 40px;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .focus\:translate-x-\[41px\] {
    &:focus {
      --tw-translate-x: 41px;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .focus\:translate-x-\[42px\] {
    &:focus {
      --tw-translate-x: 42px;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .focus\:translate-x-\[47px\] {
    &:focus {
      --tw-translate-x: 47px;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .focus\:translate-x-\[48px\] {
    &:focus {
      --tw-translate-x: 48px;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .focus\:translate-x-\[50px\] {
    &:focus {
      --tw-translate-x: 50px;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .focus\:translate-x-\[60px\] {
    &:focus {
      --tw-translate-x: 60px;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .focus\:translate-x-\[70px\] {
    &:focus {
      --tw-translate-x: 70px;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .focus\:translate-x-\[px\] {
    &:focus {
      --tw-translate-x: px;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .focus\:scale-300 {
    &:focus {
      --tw-scale-x: 300%;
      --tw-scale-y: 300%;
      --tw-scale-z: 300%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }
  .focus\:scale-\[1\.2\] {
    &:focus {
      scale: 1.2;
    }
  }
  .focus\:scale-\[2\.6\] {
    &:focus {
      scale: 2.6;
    }
  }
  .focus\:scale-\[2\] {
    &:focus {
      scale: 2;
    }
  }
  .focus\:scale-\[3\] {
    &:focus {
      scale: 3;
    }
  }
  .focus\:scale-\[4\] {
    &:focus {
      scale: 4;
    }
  }
  .focus\:scale-\[q\.2\] {
    &:focus {
      scale: q.2;
    }
  }
  .focus\:backdrop-blur-2xl {
    &:focus {
      --tw-backdrop-blur: blur(var(--blur-2xl));
      -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
      backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    }
  }
  .active\:scale-\[1\.2\] {
    &:active {
      scale: 1.2;
    }
  }
  .active\:scale-\[2\] {
    &:active {
      scale: 2;
    }
  }
  .in-focus\:scale-300 {
    :where(*:focus) & {
      --tw-scale-x: 300%;
      --tw-scale-y: 300%;
      --tw-scale-z: 300%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-ease {
  syntax: "*";
  inherits: false;
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-border-style: solid;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-outline-style: solid;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
      --tw-backdrop-blur: initial;
      --tw-backdrop-brightness: initial;
      --tw-backdrop-contrast: initial;
      --tw-backdrop-grayscale: initial;
      --tw-backdrop-hue-rotate: initial;
      --tw-backdrop-invert: initial;
      --tw-backdrop-opacity: initial;
      --tw-backdrop-saturate: initial;
      --tw-backdrop-sepia: initial;
      --tw-duration: initial;
      --tw-ease: initial;
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-scale-z: 1;
    }
  }
}
